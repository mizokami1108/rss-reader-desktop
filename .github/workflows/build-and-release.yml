name: Build and Release

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Verify build output
        run: |
          echo "=== Checking dist directory structure ==="
          find dist -type f -name "*.js" | head -20
          echo "=== Checking if main.js exists ==="
          ls -la dist/main/ || echo "dist/main directory not found"
          ls -la dist/main/main.js || echo "main.js not found"
          echo "=== Full dist directory structure ==="
          tree dist || find dist -type f

      - name: Build Electron app
        run: npm run dist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows artifacts
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            release/*.exe
            release/*.zip
          retention-days: 30

      - name: Upload macOS artifacts
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: |
            release/*.dmg
            release/*.zip
          retention-days: 30

      - name: Upload Linux artifacts
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            release/*.AppImage
            release/*.zip
          retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: ls -la artifacts/

      - name: Create Release (for tags)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/windows-build/*
            artifacts/macos-build/*
            artifacts/linux-build/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Development Release (for main branch)
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: dev-${{ github.sha }}
          name: Development Build - ${{ github.sha }}
          files: |
            artifacts/windows-build/*
            artifacts/macos-build/*
            artifacts/linux-build/*
          draft: false
          prerelease: true
          generate_release_notes: true
          body: |
            自動ビルド - Development Build
            
            このリリースはmainブランチの最新コミットから自動生成されました。
            
            ## ダウンロード
            - Windows: `.exe` ファイルをダウンロードしてインストール
            - macOS: `.dmg` ファイルをダウンロードしてインストール
            - Linux: `.AppImage` ファイルをダウンロードして実行権限を付与後実行
            
            Commit: ${{ github.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}